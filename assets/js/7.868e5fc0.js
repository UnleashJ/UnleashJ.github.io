(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{567:function(t,v,_){t.exports=_.p+"assets/img/TCP-IPlayered.f4547086.png"},568:function(t,v,_){t.exports=_.p+"assets/img/HTTPRequest.57e1c91a.png"},569:function(t,v,_){t.exports=_.p+"assets/img/HTTPResponse.4d27cbc5.png"},570:function(t,v,_){t.exports=_.p+"assets/img/cookie1.775ce31b.png"},571:function(t,v,_){t.exports=_.p+"assets/img/cookie2.cb9b9bdc.png"},572:function(t,v,_){t.exports=_.p+"assets/img/cookie3.0f208f2a.png"},601:function(t,v,_){"use strict";_.r(v);var a=_(16),s=Object(a.a)({},(function(){var t=this,v=t.$createElement,a=t._self._c||v;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("学习资料《图解HTTP》")]),t._v(" "),a("h2",{attrs:{id:"基础知识"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基础知识"}},[t._v("#")]),t._v(" 基础知识")]),t._v(" "),a("p",[t._v("我们把与互联网相关联的协议集合起来总称为 TCP/IP。TCP/IP 协议族按层次分别分为以下 4 层：应用层、传输层、网络层和数据链路层。")]),t._v(" "),a("p",[a("img",{attrs:{src:_(567),alt:""}})]),t._v(" "),a("p",[t._v("TCP/IP 协议族中与 HTTP 密不可分的3 个协议：IP、TCP 和 DNS。")]),t._v(" "),a("h3",{attrs:{id:"ip"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ip"}},[t._v("#")]),t._v(" IP")]),t._v(" "),a("p",[t._v("IP网际协议位于网络层。作用是把数据包传送给对方，用到了IP地址和Mac地址。在网络中双方通信通常是经过多台计算机和网络设备的转发才能到达目的主机。在中转时，会利用ARP 协议解析出下一个中转的MAC地址。")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"title"}),a("p",[t._v("IP 地址指明了节点被分配到的地址，MAC 地址是指网卡所属的固定地址。IP 地址可以和 MAC 地址进行配对。IP 地址可变换，但 MAC地址基本上不会更改。")])]),a("h3",{attrs:{id:"tcp"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tcp"}},[t._v("#")]),t._v(" TCP")]),t._v(" "),a("p",[t._v("TCP传输控制协议位于传输层，提供可靠的字节流服务。")]),t._v(" "),a("ol",[a("li",[t._v("字节流服务是指将大块数据分割成以报文段为单位的数据包进行管理。")]),t._v(" "),a("li",[t._v("可靠的传输服务是指，能够把数据准确可靠地传给对方。")])]),t._v(" "),a("p",[t._v("为了准备无误的将数组送到目的地，建立TCP连接时采用了三次握手策略，以此来确认客户端与服务器的接收、发送能力是否正常。发送端首先发送一个带 SYN 标志的数据包给对方。接收端收到后，回传一个带有SYN/ACK 标志的数据包以示传达确认信息。最后，发送端再回传一个带 ACK 标志的数据包，代表“握手”结束。")]),t._v(" "),a("h3",{attrs:{id:"dns"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dns"}},[t._v("#")]),t._v(" DNS")]),t._v(" "),a("p",[t._v("DNS域名解析服务，和 HTTP 协议一样位于应用层的协议。DNS 协议提供通过域名查找 IP 地址，或逆向从 IP 地址反查域名的服务。")]),t._v(" "),a("h2",{attrs:{id:"http协议概述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http协议概述"}},[t._v("#")]),t._v(" HTTP协议概述")]),t._v(" "),a("p",[t._v("HTTP 协议规定，请求从客户端发出，最后服务器端响应该请求并返回。")]),t._v(" "),a("h3",{attrs:{id:"请求报文"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#请求报文"}},[t._v("#")]),t._v(" 请求报文")]),t._v(" "),a("p",[t._v("请求报文是由请求方法、请求 URI、协议版本、可选的请求首部字段和内容实体构成的。")]),t._v(" "),a("p",[a("img",{attrs:{src:_(568),alt:""}})]),t._v(" "),a("h3",{attrs:{id:"响应报文"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#响应报文"}},[t._v("#")]),t._v(" 响应报文")]),t._v(" "),a("p",[t._v("响应报文基本上由协议版本、状态码（表示请求成功或失败的数字代码）、用以解释状态码的原因短语、可选的响应首部字段以及实体主体构成。")]),t._v(" "),a("p",[a("img",{attrs:{src:_(569),alt:""}})]),t._v(" "),a("h3",{attrs:{id:"无状态协议"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#无状态协议"}},[t._v("#")]),t._v(" 无状态协议")]),t._v(" "),a("p",[t._v("HTTP 是一种不保存状态，即无状态（stateless）协议。HTTP/1.1 虽然是无状态协议，但为了实现期望的保持状态功能，于是引入了 Cookie 技术。有了 Cookie 再用 HTTP 协议通信，就可以管理状态了。")]),t._v(" "),a("h3",{attrs:{id:"指定请求uri"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#指定请求uri"}},[t._v("#")]),t._v(" 指定请求URI")]),t._v(" "),a("p",[t._v("客户端请求访问资源而发送请求时，需要将请求URI 包含在请求报文内。指定请求 URI 的方式有很多：")]),t._v(" "),a("ol",[a("li",[t._v("URI为完整的请求 URI")]),t._v(" "),a("li",[t._v("在首部字段 Host中写明网络域名或IP地址")])]),t._v(" "),a("h3",{attrs:{id:"请求方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#请求方法"}},[t._v("#")]),t._v(" 请求方法")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("GET方法：GET 方法用来请求访问已被 URI 识别的资源。指定的资源经服务器端解析后返回响应内容。")])]),t._v(" "),a("li",[a("p",[t._v("POST：传输实体主体，POST 的主要目的并不是获取响应的主体内容。")])]),t._v(" "),a("li",[a("p",[t._v("PUT 方法用来传输文件。但是，鉴于 HTTP/1.1 的 PUT 方法自身不带验证机制，任何人都可以上传文件 , 存在安全性问题，因此一般的 Web 网站不使用该方法。")])]),t._v(" "),a("li",[a("p",[t._v("HEAD：获得报文首部。用于确认URI 的有效性及资源更新的日期时间等。")])]),t._v(" "),a("li",[a("p",[t._v("DELETE 方法用来删除文件，DELETE 方法按请求 URI 删除指定的资源。HTTP/1.1 的 DELETE 方法本身和 PUT 方法一样不带验证机制，所以一般的 Web 网站也不使用 DELETE 方法。")])]),t._v(" "),a("li",[a("p",[t._v("OPTIONS 方法用来查询针对请求 URI 指定的资源支持的方法。")])]),t._v(" "),a("li",[a("p",[t._v("TRACE：追踪路径")])]),t._v(" "),a("li",[a("p",[t._v("CONNECT：要求用隧道协议连接代理")])])]),t._v(" "),a("h3",{attrs:{id:"持久连接"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#持久连接"}},[t._v("#")]),t._v(" 持久连接")]),t._v(" "),a("p",[t._v("HTTP 协议的初始版本中，每进行一次 HTTP 通信就要断开一次TCP 连接。")]),t._v(" "),a("p",[t._v("持久连接的特点是，只要任意一端没有明确提出断开连接，则保持 TCP 连接状态。持久连接的好处在于减少了 TCP 连接的重复建立和断开所造成的额外开销，减轻了服务器端的负载。在 HTTP/1.1 中，所有的连接默认都是持久连接。")]),t._v(" "),a("p",[t._v("持久连接使得多数请求以管线化（pipelining）方式发送成为可能。从前发送请求后需等待并收到响应，才能发送下一个请求。管线化技术出现后，不用等待响应亦可直接发送下一个请求。这样就能够做到同时并行发送多个请求，而不需要一个接一个地等待响应了。")]),t._v(" "),a("h3",{attrs:{id:"cookie状态管理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cookie状态管理"}},[t._v("#")]),t._v(" Cookie状态管理")]),t._v(" "),a("p",[t._v("无状态协议当然也有它的优点。由于不必保存状态，可减少服务器的 CPU 及内存资源的消耗。")]),t._v(" "),a("p",[t._v("Cookie 技术通过在请求和响应报文中写入 Cookie 信息来控制客户端的状态。Cookie 会根据从服务器端发送的响应报文内的一个叫做 Set-Cookie的首部字段信息，通知客户端保存 Cookie。当下次客户端再往该服务器发送请求时，客户端会自动在请求报文中加入 Cookie 值后发送出去。")]),t._v(" "),a("p",[a("img",{attrs:{src:_(570),alt:""}})]),t._v(" "),a("p",[a("img",{attrs:{src:_(571),alt:""}})]),t._v(" "),a("p",[a("img",{attrs:{src:_(572),alt:""}})]),t._v(" "),a("h2",{attrs:{id:"http报文内的http信息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http报文内的http信息"}},[t._v("#")]),t._v(" HTTP报文内的HTTP信息")]),t._v(" "),a("p",[t._v("用于 HTTP 协议交互的信息被称为 HTTP 报文。HTTP 报文大致可分为报文首部和报文主体（非必须）两块，中间以CP+LF空行作为分隔。")]),t._v(" "),a("p",[t._v("请求报文和响应报文的首部有以下内容：")]),t._v(" "),a("ol",[a("li",[t._v("请求行：请求报文中，包含请求方法，请求 URI 和 HTTP 版本")]),t._v(" "),a("li",[t._v("状态行：响应报文中，包含和 HTTP 版本、状态码、原因短语。")]),t._v(" "),a("li",[t._v("首部字段：包含表示请求和响应的各种条件和属性的各类首部，一般有 4 种首部，分别是：通用首部、请求首部、响应首部和实体首部。")]),t._v(" "),a("li",[t._v("其他：HTTP 的 RFC 里未定义的首部（Cookie 等）。")])]),t._v(" "),a("p",[t._v("内容协商机制是指客户端和服务器端就响应的资源内容进行交涉，然后提供给客户端最为适合的资源。内容协商会以响应资源的语言、字符集、编码方式等作为判断的基准。")]),t._v(" "),a("h2",{attrs:{id:"http状态码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http状态码"}},[t._v("#")]),t._v(" HTTP状态码")]),t._v(" "),a("p",[t._v("状态码类别")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th"),t._v(" "),a("th",[t._v("类别")]),t._v(" "),a("th",[t._v("原因短语")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("1XX")]),t._v(" "),a("td",[t._v("Informational（信息性状态码）")]),t._v(" "),a("td",[t._v("接收的请求正在处理")])]),t._v(" "),a("tr",[a("td",[t._v("2XX")]),t._v(" "),a("td",[t._v("Success（成功状态码）")]),t._v(" "),a("td",[t._v("请求正常处理完毕")])]),t._v(" "),a("tr",[a("td",[t._v("3XX")]),t._v(" "),a("td",[t._v("Redirection（重定向状态码）")]),t._v(" "),a("td",[t._v("需要进行附加操作以完成请求")])]),t._v(" "),a("tr",[a("td",[t._v("4XX")]),t._v(" "),a("td",[t._v("Client Error（客户端错误状态码）")]),t._v(" "),a("td",[t._v("服务器无法处理请求")])]),t._v(" "),a("tr",[a("td",[t._v("5XX")]),t._v(" "),a("td",[t._v("Server Error（服务器错误状态码）")]),t._v(" "),a("td",[t._v("服务器处理请求出错")])])])])])}),[],!1,null,null,null);v.default=s.exports}}]);